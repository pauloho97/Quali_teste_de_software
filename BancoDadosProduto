package aula;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class BancoDadosProduto {

	private Connection connection = null;

	public BancoDadosProduto() {
		conectaBanco();
	}

	// CONECTA O BANCO DE DADOS H2 EM MEMÓRIA.
	private void conectaBanco() {
		try {
			String jdbcURL = "jdbc:h2:mem:test";

			connection = DriverManager.getConnection(jdbcURL);

			System.out.println("Connected to H2 in-memory database.");

			// Criação da tabela de produtos com cod_produto como chave primária
			String sql = "CREATE TABLE produto (cod_produto INT PRIMARY KEY, nome_produto VARCHAR(50), preco_produto FLOAT)";

			Statement statement = connection.createStatement();
			statement.execute(sql);

			System.out.println("Created table produto.");

		} catch (Exception e) {
			System.out.println("Error ao conectar o banco de dados");
			e.printStackTrace();
		}
	}

	// INSERIR UM PRODUTO
	public boolean insertProduto(Produto p) {
		String sql = "INSERT INTO produto (cod_produto, nome_produto, preco_produto) VALUES("
				+ p.getCOD_PRODUTO() + ", '" + p.getNOME_PRODUTO() + "', " + p.getPRECO_PRODUTO() + ")";

		System.out.println("SQL Insert: " + sql);

		try {
			connection.createStatement().executeUpdate(sql);
			return true;
		} catch (Exception e) {
			System.out.println("Erro na inserção do produto: " + e);
			return false;
		}
	}

	// ATUALIZAR PRODUTO
	public boolean updateProduto(Produto p) {
		String sql = "UPDATE produto SET nome_produto = '" + p.getNOME_PRODUTO() + "', preco_produto = "
				+ p.getPRECO_PRODUTO() + " WHERE cod_produto = " + p.getCOD_PRODUTO();

		System.out.println("SQL Update: " + sql);

		try {
			connection.createStatement().executeUpdate(sql);
		} catch (Exception e) {
			System.out.println("Erro ao atualizar produto: " + e);
			return false;
		}

		return true;
	}

	// DELETAR PRODUTO
	public boolean deleteProduto(int cod_produto) {
		String sql = "DELETE FROM produto WHERE cod_produto = " + cod_produto;
		System.out.println("SQL Delete: " + sql);

		try {
			connection.createStatement().executeUpdate(sql);
		} catch (Exception e) {
			System.out.println("Erro ao deletar produto: " + e);
			return false;
		}

		return true;
	}

	// LISTAR PRODUTOS
	public List<Produto> listProdutos() {
		List<Produto> lista = new ArrayList<>();
		String sql = "SELECT * FROM produto";
		System.out.println("SQL Select: " + sql);
		try {
			ResultSet resultSet = connection.createStatement().executeQuery(sql);

			while (resultSet.next()) {
				Produto produto = new Produto(
					resultSet.getInt("cod_produto"),
					resultSet.getString("nome_produto"),
					resultSet.getFloat("preco_produto")
				);
				lista.add(produto);
			}

		} catch (Exception e) {
			System.out.println("Erro ao listar produtos: " + e);
		}

		return lista;
	}

	// BUSCAR PRODUTO POR COD_PRODUTO
	public Produto buscaProduto(int cod_produto) {
		String sql = "SELECT * FROM produto WHERE cod_produto = " + cod_produto;
		System.out.println("SQL Select: " + sql);
		Produto produto = null;

		try {
			ResultSet resultSet = connection.createStatement().executeQuery(sql);

			if (resultSet.next()) {
				produto = new Produto(
					resultSet.getInt("cod_produto"),
					resultSet.getString("nome_produto"),
					resultSet.getFloat("preco_produto")
				);
			}
		} catch (Exception e) {
			System.out.println("Erro ao buscar produto: " + e);
		}

		return produto;
	}

	// DELETAR TODOS OS PRODUTOS
	public void deletarTudo() {
		String sql = "DELETE FROM produto";
		try {
			connection.createStatement().executeUpdate(sql);
			System.out.println("Deletado todos os dados da tabela produto.");
		} catch (Exception e) {
			System.out.println("Erro ao deletar tudo: " + e);
		}
	}
}
